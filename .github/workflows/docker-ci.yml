name: Build and Push Docker Image

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
          image: mysql:8.0
          env:
            MYSQL_ROOT_PASSWORD: example
            MYSQL_DATABASE: gruposmusicales
          ports:
            - 3306:3306
          options: >-
            --health-cmd="mysqladmin ping -h localhost -pexample"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Wait for MySQL
        run: |
          echo "Esperando que MySQL est√© listo..."
          until mysqladmin ping -h 127.0.0.1 -pexample --silent; do
            sleep 3
          done

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Tests
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: example
          DB_NAME: gruposmusicales
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest --maxfail=1 --disable-warnings -q

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/grupos_musicales_app

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true